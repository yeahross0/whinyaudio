[package]
name = "tinyaudio"
version = "1.1.0"
edition = "2021"
license = "MIT"
description = "TinyAudio is a cross-platform, easy-to-use, low-level, audio output library."
keywords = ["audio", "output", "lowlevel"]
categories = ["multimedia::audio"]
include = [
    "/src/**/*",
    "/Cargo.toml",
    "/LICENSE",
    "/README.md",
    "/examples/*",
    "/wasm-examples/**/*",
    "/android-examples/**/*"
]
homepage = "https://github.com/mrDIMAS/tinyaudio"
documentation = "https://docs.rs/tinyaudio"
repository = "https://github.com/mrDIMAS/tinyaudio"
readme = "README.md"
rust-version = "1.56"

[workspace]
members = ["android-examples", "wasm-examples", "ios-example/Rust-TinyAudioExample"]

# Make sure the separate examples (i.e. for Android or WebAssembly) will use the crate optimized.
[profile.dev.package."*"]
opt-level = 3

[target.'cfg(target_os = "android")'.dependencies]
ndk = { version = "0.9.0", default-features = false, features = ["audio", "api-level-27"] }

[target.'cfg(target_os = "windows")'.dependencies]
winapi = { version = "0.3.9", features = ["minwindef", "winnt", "windef", "winuser", "dsound", "synchapi", "winbase"] }

[target.'cfg(all(target_os = "unknown", target_arch = "wasm32"))'.dependencies]

[target.'cfg(target_os = "linux")'.dependencies]
alsa-sys = { version = "0.3.1" }

[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
coreaudio-sys = { version = "0.2.8" }
core-foundation-sys = { version = "0.8.2" }
